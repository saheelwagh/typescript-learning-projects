{"code":"import { buildStreak, formattedDate } from './utlis';\r\nimport { KEY } from './utlis';\r\nimport { updateStreak } from './utlis';\r\nfunction shouldIncrementOrResetStreakCount(currentDate, lastLoginDate) {\r\n    // We get 11/5/2021\r\n    // so to get 5, we split on / and get the second item\r\n    const difference = currentDate.getDate() - parseInt(lastLoginDate.split('/')[1]);\r\n    if (difference === 0) {\r\n        return 'none';\r\n    }\r\n    if (difference === 1) { //if they logged in on a consecutive day\r\n        return 'increment';\r\n    }\r\n    return 'reset';\r\n}\r\nexport function streakCounter(storage, date) {\r\n    const streakInLocalStorage = storage.getItem(KEY); //in the function call, localstorage is passed as storage through the param\r\n    if (streakInLocalStorage) {\r\n        try {\r\n            const streak = JSON.parse(streakInLocalStorage);\r\n            const state = shouldIncrementOrResetStreakCount(date, streak.lastLoginDate);\r\n            const SHOULD_INCREMENT = state === \"increment\";\r\n            const SHOULD_RESET = state === \"reset\";\r\n            if (SHOULD_INCREMENT) {\r\n                const updatedStreak = buildStreak(date, {\r\n                    startDate: streak.startDate,\r\n                    currentCount: streak.currentCount + 1,\r\n                    lastLoginDate: formattedDate(date)\r\n                });\r\n                //save updated streak count to localStorage\r\n                updateStreak(storage, updatedStreak);\r\n                return updatedStreak;\r\n            }\r\n            if (SHOULD_RESET) {\r\n                const updatedStreak = buildStreak(date);\r\n                //store in localStorage\r\n                updateStreak(storage, updatedStreak);\r\n                return updatedStreak;\r\n            }\r\n            return streak;\r\n        }\r\n        catch (error) {\r\n            console.error('failed to parse streak from localStorage');\r\n        }\r\n    }\r\n    const streak = buildStreak(date);\r\n    //store in localStorage\r\n    updateStreak(storage, streak); //how did storage.setitem become available by default ?\r\n    return streak;\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/home/swagh/coding/typescript-learning-projects/src/utlis.ts","/home/swagh/coding/typescript-learning-projects/src/utlis.ts","/home/swagh/coding/typescript-learning-projects/src/utlis.ts","/home/swagh/coding/typescript-learning-projects/src/utlis.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/index.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAC,WAAW,EAAE,aAAa,EAAC,MAAM,SAAS,CAAA;AAGlD,OAAO,EAAE,GAAG,EAAE,MAAM,SAAS,CAAA;AAC7B,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAA;AAEtC,SAAS,iCAAiC,CAAC,WAAiB,EAAE,aAAqB;IAC9E,mBAAmB;IACpB,qDAAqD;IACrD,MAAM,UAAU,GAAG,WAAW,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAEhF,IAAG,UAAU,KAAG,CAAC,EAAC;QACd,OAAO,MAAM,CAAA;KAChB;IAED,IAAG,UAAU,KAAI,CAAC,EAAC,EAAE,wCAAwC;QACzD,OAAO,WAAW,CAAA;KACrB;IACD,OAAO,OAAO,CAAA;AAClB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,OAAgB,EAAE,IAAU;IACtD,MAAM,oBAAoB,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA,CAAC,2EAA2E;IAE7H,IAAG,oBAAoB,EAAC;QACpB,IAAI;YACA,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAW,CAAA;YACzD,MAAM,KAAK,GAAG,iCAAiC,CAAC,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,CAAA;YAC3E,MAAM,gBAAgB,GAAG,KAAK,KAAK,WAAW,CAAA;YAC9C,MAAM,YAAY,GAAG,KAAK,KAAK,OAAO,CAAA;YACtC,IAAG,gBAAgB,EAAC;gBAChB,MAAM,aAAa,GAAG,WAAW,CAAC,IAAI,EAAE;oBACpC,SAAS,EAAG,MAAM,CAAC,SAAS;oBAC5B,YAAY,EAAG,MAAM,CAAC,YAAY,GAAC,CAAC;oBACpC,aAAa,EAAG,aAAa,CAAC,IAAI,CAAC;iBACtC,CAAC,CAAA;gBACF,2CAA2C;gBAC3C,YAAY,CAAC,OAAO,EAAC,aAAa,CAAC,CAAA;gBACvC,OAAO,aAAa,CAAA;aACnB;YACD,IAAG,YAAY,EAAC;gBACZ,MAAM,aAAa,GAAG,WAAW,CAAC,IAAI,CAAC,CAAA;gBAC3C,uBAAuB;gBACnB,YAAY,CAAC,OAAO,EAAC,aAAa,CAAC,CAAA;gBACnC,OAAO,aAAa,CAAA;aACvB;YAED,OAAO,MAAM,CAAA;SAChB;QACD,OAAO,KAAK,EAAE;YACV,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAA;SAC5D;KACJ;IAED,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAA;IAChC,uBAAuB;IACvB,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAA,CAAC,uDAAuD;IACrF,OAAO,MAAM,CAAA;AACjB,CAAC\"}","dts":{"name":"/home/swagh/coding/typescript-learning-projects/dist/index.d.ts","writeByteOrderMark":false,"text":"import { Streak } from './utlis';\r\nexport declare function streakCounter(storage: Storage, date: Date): Streak;\r\n"}}
